use std::{env, path::PathBuf};

/// The path where the generated header file will be written relative to bindings folder.
const PATH_FOR_NIM_HEADER: &str = "nim/nim_code/nim_eth_kzg/header.nim";

fn main() {
    println!(
        "cargo:rerun-if-changed={}",
        path_to_bindings_folder().display()
    );

    // Go up two directories to be at bindings parent directory
    let parent = path_to_bindings_folder();
    let path_to_c_crate = parent.join("c");

    let output_file = parent.join(PATH_FOR_NIM_HEADER).display().to_string();
    nbindgen::Builder::new()
        .with_autogen_warning(
            "# WARNING: This file has been automatically generated by nbindgen. Do not edit by hand.",
        )
        .with_crate(path_to_c_crate)
        .generate()
        .expect("Unable to generate bindings")
        .write_to_file(output_file);
}

fn path_to_bindings_folder() -> PathBuf {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").expect("CARGO_MANIFEST_DIR env not set");
    let crate_dir = PathBuf::from(crate_dir);
    // Go up two directories to be at bindings parent directory
    let parent = crate_dir
        .parent()
        .expect("No parent directory found")
        .parent()
        .expect("No parent directory found")
        .to_path_buf();
    parent
}
