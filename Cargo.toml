[workspace]

members = [
    "bindings/c",
    "bindings/java/rust_code",
    "bindings/node",
    "bindings/nim/rust_code",
    "bindings/csharp/rust_code",
    "eip7594",
    "maybe_rayon",
    "cryptography/bls12_381",
    "cryptography/kzg_multi_open",
    "cryptography/polynomial",
    "cryptography/erasure_codes",
]

resolver = "2"

[workspace.package]
authors = ["Kevaundray Wedderburn <kev@the.dev>"]
edition = "2021"
license = "MIT"
version = "0.5.4"
rust-version = "1.70"
repository = "https://github.com/crate-crypto/rust-eth-kzg"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
dbg_macro = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_stack_frames = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_is_variant_and = "warn"
manual_string_new = "warn"
match_same_arms = "warn"
missing-const-for-fn = "warn"
mutex_integer = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
result_large_err = "allow"
redundant_clone = "warn"
redundant_else = "warn"
single_char_pattern = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
uninhabited_references = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
while_float = "warn"
zero_sized_map_values = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
doc_markdown = "allow"
debug_assert_with_mut_call = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"
too_long_first_doc_paragraph = "allow"

[workspace.dependencies]
# These names are essentially a way to achieve scoping when we publish to crates.io
# Ideally we don't publish bls12_381 and polynomial, but crates.io requires
# all dependencies to be published and not local.
bls12_381 = { package = "crate_crypto_internal_eth_kzg_bls12_381", version = "0.5.4", path = "cryptography/bls12_381" }
polynomial = { package = "crate_crypto_internal_eth_kzg_polynomial", version = "0.5.4", path = "cryptography/polynomial" }
erasure_codes = { package = "crate_crypto_internal_eth_kzg_erasure_codes", version = "0.5.4", path = "cryptography/erasure_codes" }
rust_eth_kzg = { version = "0.5.4", path = "eip7594" }
maybe_rayon = { package = "crate_crypto_internal_eth_kzg_maybe_rayon", version = "0.5.4", path = "maybe_rayon" }
kzg_multi_open = { package = "crate_crypto_kzg_multi_open_fk20", version = "0.5.4", path = "cryptography/kzg_multi_open" }
c_eth_kzg = { version = "0.5.4", path = "bindings/c" }
hex = "0.4.3"
rayon = "1.10.0"
rand = "0.9.1"

[profile.release]
lto = true
